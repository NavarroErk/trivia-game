{"ast":null,"code":"import _regeneratorRuntime from\"C:/Github/Repos/trivia-game/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Github/Repos/trivia-game/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Github/Repos/trivia-game/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from\"react\";import\"./Host.css\";import PlayerCard from\"../Components/PlayerCard\";import Footer from\"../Components/Footer.jsx\";import CategoryOption from\"../Components/CategoryOption\";// import CategorySelect from \"../Components/CategorySelect.jsx\";\n//category Select\n//User- Select what categories you want your rivals to be quizzed on\n//DEV - Map the categories from the API to be rendered on the screen for user to see\n//Heading = Header Game Code\n//Players Joined\n//Settings\n//Start Game\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Host(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),triviaCategories=_useState2[0],setTriviaCategories=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),userCategory=_useState4[0],setUserCategory=_useState4[1];// const [displayUserCategory, setDisplayUserCategory] = useState();\nvar _useState5=useState({}),_useState6=_slicedToArray(_useState5,2),gameParams=_useState6[0],setGameParams=_useState6[1];var _useState7=useState(gameCodeVal()),_useState8=_slicedToArray(_useState7,2),gameCode=_useState8[0],setGameCode=_useState8[1];useEffect(function(){function fetchData(){return _fetchData.apply(this,arguments);}function _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response,data,dataArr;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch(\"https://trivia-quiz-questions-api.p.rapidapi.com/api_category.php\",{method:\"GET\",headers:{\"X-RapidAPI-Key\":\"96f08c6256msh06a5acd536381b6p15e965jsne34a53ad1902\",\"X-RapidAPI-Host\":\"trivia-quiz-questions-api.p.rapidapi.com\"}});case 3:response=_context.sent;if(response.ok){_context.next=6;break;}throw new Error(\"Failed to fetch trivia data\");case 6:_context.next=8;return response.json();case 8:data=_context.sent;dataArr=data.trivia_categories;console.log(dataArr);// console.log(dataArr.sort());\nsetTriviaCategories(dataArr);_context.next=17;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](0);console.error(_context.t0);case 17:case\"end\":return _context.stop();}},_callee,null,[[0,14]]);}));return _fetchData.apply(this,arguments);}fetchData();},[]);//NODE JS WORK\n//assign passcode in server to individual session\n//make an array of active session codes to check if generated code is being used\nfunction gameCodeVal(){var characters=\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";var passcode=\"\";for(var i=0;i<6;i++){var randomIndex=Math.floor(Math.random()*characters.length);passcode+=characters.charAt(randomIndex);}return passcode;}// function getCatOptionBtns() {\n//   const categoryOptionBtnArr =\n//     document.querySelectorAll(\".categoryOptionBtn\");\n//   console.log(categoryOptionBtnArr);\n//   return categoryOptionBtnArr;\n// }\nfunction renderCategoryBtns(){return triviaCategories.length>0?triviaCategories.map(function(cat){return/*#__PURE__*/_jsx(CategoryOption,{categoryName:cat.name,categoryId:cat.id,setUserCategory:setUserCategory},cat.id);}):/*#__PURE__*/_jsx(\"p\",{children:\"Loading Categories...\"});}return/*#__PURE__*/_jsx(\"main\",{children:/*#__PURE__*/_jsxs(\"div\",{id:\"host\",children:[/*#__PURE__*/_jsx(\"p\",{id:\"codeGenBtn\",onClick:function onClick(){return setGameCode(gameCodeVal());},children:\"Click here for New Code\"}),/*#__PURE__*/_jsxs(\"div\",{id:\"playerCardContainer\",children:[/*#__PURE__*/_jsx(\"div\",{id:\"gameCode\",children:/*#__PURE__*/_jsxs(\"p\",{children:[\"Lobby Code: \",gameCode]})}),/*#__PURE__*/_jsx(PlayerCard,{id:\"username\",username:\"Player 1\",color:\"coral\"}),/*#__PURE__*/_jsx(PlayerCard,{id:\"username2\",username:\"Player 2\"}),/*#__PURE__*/_jsx(PlayerCard,{id:\"username3\",username:\"Player 3\"}),/*#__PURE__*/_jsx(PlayerCard,{id:\"username4\",username:\"Player 4\"})]}),/*#__PURE__*/_jsxs(\"div\",{id:\"createGameSettings\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Game Parameters\"}),/*#__PURE__*/_jsxs(\"div\",{id:\"gameParamsContainer\",children:[/*#__PURE__*/_jsx(\"button\",{children:\"P1\"}),/*#__PURE__*/_jsx(\"button\",{children:\"P2\"}),/*#__PURE__*/_jsx(\"button\",{children:\"P3\"}),/*#__PURE__*/_jsx(\"button\",{children:\"P4\"}),/*#__PURE__*/_jsx(\"button\",{children:\"P5\"}),/*#__PURE__*/_jsx(\"button\",{children:\"P6\"}),/*#__PURE__*/_jsx(\"button\",{children:\"P7\"}),/*#__PURE__*/_jsx(\"button\",{children:\"P8\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{id:\"gameCategoriesContainer\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Categories\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\" \",userCategory,\" \"]}),/*#__PURE__*/_jsx(\"div\",{children:renderCategoryBtns()})]})]}),/*#__PURE__*/_jsx(\"button\",{id:\"startGameBtn\",children:\"Start Game\"})]})});}export default Host;","map":{"version":3,"names":["React","useState","useEffect","PlayerCard","Footer","CategoryOption","jsx","_jsx","jsxs","_jsxs","Host","_useState","_useState2","_slicedToArray","triviaCategories","setTriviaCategories","_useState3","_useState4","userCategory","setUserCategory","_useState5","_useState6","gameParams","setGameParams","_useState7","gameCodeVal","_useState8","gameCode","setGameCode","fetchData","_fetchData","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","data","dataArr","wrap","_callee$","_context","prev","next","fetch","method","headers","sent","ok","Error","json","trivia_categories","console","log","t0","error","stop","characters","passcode","i","randomIndex","Math","floor","random","length","charAt","renderCategoryBtns","map","cat","categoryName","name","categoryId","id","children","onClick","username","color"],"sources":["C:/Github/Repos/trivia-game/src/Pages/Host.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Host.css\";\r\n\r\nimport PlayerCard from \"../Components/PlayerCard\";\r\nimport Footer from \"../Components/Footer.jsx\";\r\nimport CategoryOption from \"../Components/CategoryOption\";\r\n\r\n// import CategorySelect from \"../Components/CategorySelect.jsx\";\r\n\r\n//category Select\r\n//User- Select what categories you want your rivals to be quizzed on\r\n//DEV - Map the categories from the API to be rendered on the screen for user to see\r\n\r\n//Heading = Header Game Code\r\n//Players Joined\r\n//Settings\r\n//Start Game\r\n\r\nfunction Host() {\r\n  const [triviaCategories, setTriviaCategories] = useState([]);\r\n  const [userCategory, setUserCategory] = useState(\"\");\r\n  // const [displayUserCategory, setDisplayUserCategory] = useState();\r\n  const [gameParams, setGameParams] = useState({});\r\n  const [gameCode, setGameCode] = useState(gameCodeVal());\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const response = await fetch(\r\n          \"https://trivia-quiz-questions-api.p.rapidapi.com/api_category.php\",\r\n          {\r\n            method: \"GET\",\r\n            headers: {\r\n              \"X-RapidAPI-Key\":\r\n                \"96f08c6256msh06a5acd536381b6p15e965jsne34a53ad1902\",\r\n              \"X-RapidAPI-Host\": \"trivia-quiz-questions-api.p.rapidapi.com\",\r\n            },\r\n          }\r\n        );\r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to fetch trivia data\");\r\n        }\r\n\r\n        const data = await response.json();\r\n        const dataArr = data.trivia_categories;\r\n        console.log(dataArr);\r\n        // console.log(dataArr.sort());\r\n        setTriviaCategories(dataArr);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  //NODE JS WORK\r\n  //assign passcode in server to individual session\r\n  //make an array of active session codes to check if generated code is being used\r\n  function gameCodeVal() {\r\n    const characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n    let passcode = \"\";\r\n    for (let i = 0; i < 6; i++) {\r\n      const randomIndex = Math.floor(Math.random() * characters.length);\r\n      passcode += characters.charAt(randomIndex);\r\n    }\r\n    return passcode;\r\n  }\r\n\r\n  // function getCatOptionBtns() {\r\n  //   const categoryOptionBtnArr =\r\n  //     document.querySelectorAll(\".categoryOptionBtn\");\r\n  //   console.log(categoryOptionBtnArr);\r\n  //   return categoryOptionBtnArr;\r\n  // }\r\n\r\n  function renderCategoryBtns() {\r\n    return triviaCategories.length > 0 ? (\r\n      triviaCategories.map((cat) => (\r\n        <CategoryOption\r\n          key={cat.id}\r\n          categoryName={cat.name}\r\n          categoryId={cat.id}\r\n          setUserCategory={setUserCategory}\r\n        />\r\n      ))\r\n    ) : (\r\n      <p>Loading Categories...</p>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <main>\r\n      <div id=\"host\">\r\n        {/* H1 GAME CODE  generate a single use code*/}\r\n        {/* <button onClick={getTrivia}>GET TRIVIA</button> */}\r\n        <p id=\"codeGenBtn\" onClick={() => setGameCode(gameCodeVal())}>\r\n          Click here for New Code\r\n        </p>\r\n        <div id=\"playerCardContainer\">\r\n          <div id=\"gameCode\">\r\n            <p>Lobby Code: {gameCode}</p>\r\n          </div>\r\n\r\n          {/* titles/colors will be grabbed from backend */}\r\n          <PlayerCard id=\"username\" username=\"Player 1\" color=\"coral\" />\r\n          <PlayerCard id=\"username2\" username=\"Player 2\" />\r\n          <PlayerCard id=\"username3\" username=\"Player 3\" />\r\n          <PlayerCard id=\"username4\" username=\"Player 4\" />\r\n        </div>\r\n\r\n        <div id=\"createGameSettings\">\r\n          {/* <button className=\"gamemodeBtn\">Classic</button> */}\r\n          {/* <button className=\"gamemodeBtn\">Fast Mode</button> */}\r\n          <div>\r\n            <h3>Game Parameters</h3>\r\n            <div id=\"gameParamsContainer\">\r\n              <button>P1</button>\r\n              <button>P2</button>\r\n              <button>P3</button>\r\n              <button>P4</button>\r\n              <button>P5</button>\r\n              <button>P6</button>\r\n              <button>P7</button>\r\n              <button>P8</button>\r\n            </div>\r\n          </div>\r\n          <div id=\"gameCategoriesContainer\">\r\n            <h3>Categories</h3>\r\n            <p> {userCategory} </p>\r\n            <div>{renderCategoryBtns()}</div>\r\n          </div>\r\n        </div>\r\n\r\n        <button id=\"startGameBtn\">Start Game</button>\r\n      </div>\r\n      {/* <Footer /> */}\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Host;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}