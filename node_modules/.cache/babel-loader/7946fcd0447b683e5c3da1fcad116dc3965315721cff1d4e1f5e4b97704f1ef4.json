{"ast":null,"code":"var _jsxFileName = \"C:\\\\Github\\\\Repos\\\\trivia-game\\\\src\\\\Pages\\\\Host.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./Host.css\";\nimport PlayerCard from \"../Components/PlayerCard\";\nimport Thing from \"../Components/Thing\";\n// import CategorySelect from \"../Components/CategorySelect.jsx\";\n\n//category Select\n//User- Select what categories you want your rivals to be quizzed on\n//DEV - Map the categories from the API to be rendered on the screen for user to see\n\n//Heading = Header Game Code\n//Players Joined\n//Settings\n//Start Game\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Host() {\n  _s();\n  const [triviaCategories, setTriviaCategories] = useState();\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await fetch(\"https://trivia-quiz-questions-api.p.rapidapi.com/api_category.php\", {\n          method: \"GET\",\n          headers: {\n            \"X-RapidAPI-Key\": \"96f08c6256msh06a5acd536381b6p15e965jsne34a53ad1902\",\n            \"X-RapidAPI-Host\": \"trivia-quiz-questions-api.p.rapidapi.com\"\n          }\n        });\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch trivia data\");\n        }\n        const data = await response.json();\n        const dataArr = data.trivia_categories;\n        console.log(dataArr);\n        setTriviaCategories(dataArr);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    fetchData();\n  }, []);\n\n  // async function getTrivia() {\n  //   try {\n  //     const response = await fetch(\n  //       \"https://trivia-quiz-questions-api.p.rapidapi.com/api_category.php\",\n  //       {\n  //         method: \"GET\",\n  //         headers: {\n  //           \"X-RapidAPI-Key\":\n  //             \"96f08c6256msh06a5acd536381b6p15e965jsne34a53ad1902\",\n  //           \"X-RapidAPI-Host\": \"trivia-quiz-questions-api.p.rapidapi.com\",\n  //         },\n  //       }\n  //     );\n\n  //     if (!response.ok) {\n  //       throw new Error(\"Failed to fetch trivia data\");\n  //     }\n\n  //     const data = await response.json();\n  //     const dataArr = data.trivia_categories;\n  //     console.log(dataArr);\n  //     return dataArr;\n  //   } catch (error) {\n  //     console.error(error);\n  //     throw error; // Re-throw the error to be handled elsewhere if needed\n  //   }\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"gameCode\",\n      children: \"Lobby Code 696969\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      id: \"host\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"playerCardContainer\",\n        children: [/*#__PURE__*/_jsxDEV(PlayerCard, {\n          id: \"username\",\n          username: \"NIG\",\n          color: \"coral\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PlayerCard, {\n          id: \"username2\",\n          username: \"Player 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PlayerCard, {\n          id: \"username3\",\n          username: \"Player 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PlayerCard, {\n          id: \"username4\",\n          username: \"Player 4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"createGameSettings\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Game Parameters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"gameParamsContainer\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"P1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"P2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"P3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"P4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"P5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"P6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"P7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"P8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"gameCategoriesContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Categories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: triviaCategories.map(cat => {\n              /*#__PURE__*/_jsxDEV(Thing, {\n                categoryName: cat.name,\n                categoryId: cat.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 17\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"startGameBtn\",\n        children: \"Start Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Host, \"YFFUWKD3UCHv6JmAmCiWbOXox/k=\");\n_c = Host;\nexport default Host;\nvar _c;\n$RefreshReg$(_c, \"Host\");","map":{"version":3,"names":["React","useState","useEffect","PlayerCard","Thing","jsxDEV","_jsxDEV","Fragment","_Fragment","Host","_s","triviaCategories","setTriviaCategories","fetchData","response","fetch","method","headers","ok","Error","data","json","dataArr","trivia_categories","console","log","error","children","id","fileName","_jsxFileName","lineNumber","columnNumber","username","color","map","cat","categoryName","name","categoryId","_c","$RefreshReg$"],"sources":["C:/Github/Repos/trivia-game/src/Pages/Host.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Host.css\";\r\n\r\nimport PlayerCard from \"../Components/PlayerCard\";\r\nimport Thing from \"../Components/Thing\";\r\n// import CategorySelect from \"../Components/CategorySelect.jsx\";\r\n\r\n//category Select\r\n//User- Select what categories you want your rivals to be quizzed on\r\n//DEV - Map the categories from the API to be rendered on the screen for user to see\r\n\r\n//Heading = Header Game Code\r\n//Players Joined\r\n//Settings\r\n//Start Game\r\n\r\nfunction Host() {\r\n  const [triviaCategories, setTriviaCategories] = useState();\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const response = await fetch(\r\n          \"https://trivia-quiz-questions-api.p.rapidapi.com/api_category.php\",\r\n          {\r\n            method: \"GET\",\r\n            headers: {\r\n              \"X-RapidAPI-Key\":\r\n                \"96f08c6256msh06a5acd536381b6p15e965jsne34a53ad1902\",\r\n              \"X-RapidAPI-Host\": \"trivia-quiz-questions-api.p.rapidapi.com\",\r\n            },\r\n          }\r\n        );\r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to fetch trivia data\");\r\n        }\r\n\r\n        const data = await response.json();\r\n        const dataArr = data.trivia_categories;\r\n        console.log(dataArr);\r\n        setTriviaCategories(dataArr);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  // async function getTrivia() {\r\n  //   try {\r\n  //     const response = await fetch(\r\n  //       \"https://trivia-quiz-questions-api.p.rapidapi.com/api_category.php\",\r\n  //       {\r\n  //         method: \"GET\",\r\n  //         headers: {\r\n  //           \"X-RapidAPI-Key\":\r\n  //             \"96f08c6256msh06a5acd536381b6p15e965jsne34a53ad1902\",\r\n  //           \"X-RapidAPI-Host\": \"trivia-quiz-questions-api.p.rapidapi.com\",\r\n  //         },\r\n  //       }\r\n  //     );\r\n\r\n  //     if (!response.ok) {\r\n  //       throw new Error(\"Failed to fetch trivia data\");\r\n  //     }\r\n\r\n  //     const data = await response.json();\r\n  //     const dataArr = data.trivia_categories;\r\n  //     console.log(dataArr);\r\n  //     return dataArr;\r\n  //   } catch (error) {\r\n  //     console.error(error);\r\n  //     throw error; // Re-throw the error to be handled elsewhere if needed\r\n  //   }\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <h1 id=\"gameCode\">Lobby Code 696969</h1>\r\n      <main id=\"host\">\r\n        {/* H1 GAME CODE  generate a single use code*/}\r\n        {/* <button onClick={getTrivia}>GET TRIVIA</button> */}\r\n\r\n        <div id=\"playerCardContainer\">\r\n          {/* titles/colors will be grabbed from backend */}\r\n          <PlayerCard id=\"username\" username=\"NIG\" color=\"coral\" />\r\n          <PlayerCard id=\"username2\" username=\"Player 2\" />\r\n          <PlayerCard id=\"username3\" username=\"Player 3\" />\r\n          <PlayerCard id=\"username4\" username=\"Player 4\" />\r\n        </div>\r\n        <div id=\"createGameSettings\">\r\n          {/* <button className=\"gamemodeBtn\">Classic</button> */}\r\n          {/* <button className=\"gamemodeBtn\">Fast Mode</button> */}\r\n          <div>\r\n            <h3>Game Parameters</h3>\r\n            <div id=\"gameParamsContainer\">\r\n              <button>P1</button>\r\n              <button>P2</button>\r\n              <button>P3</button>\r\n              <button>P4</button>\r\n              <button>P5</button>\r\n              <button>P6</button>\r\n              <button>P7</button>\r\n              <button>P8</button>\r\n            </div>\r\n          </div>\r\n          <div id=\"gameCategoriesContainer\">\r\n            <h3>Categories</h3>\r\n            <div>\r\n              {triviaCategories.map((cat) => {\r\n                <Thing categoryName={cat.name} categoryId={cat.id} />;\r\n              })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <button id=\"startGameBtn\">Start Game</button>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Host;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,YAAY;AAEnB,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,KAAK,MAAM,qBAAqB;AACvC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEA,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGX,QAAQ,CAAC,CAAC;EAE1DC,SAAS,CAAC,MAAM;IACd,eAAeW,SAASA,CAAA,EAAG;MACzB,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,mEAAmE,EACnE;UACEC,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACP,gBAAgB,EACd,oDAAoD;YACtD,iBAAiB,EAAE;UACrB;QACF,CACF,CAAC;QACD,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAChD;QAEA,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;QAClC,MAAMC,OAAO,GAAGF,IAAI,CAACG,iBAAiB;QACtCC,OAAO,CAACC,GAAG,CAACH,OAAO,CAAC;QACpBV,mBAAmB,CAACU,OAAO,CAAC;MAC9B,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAACA,KAAK,CAAC;MACtB;IACF;IACAb,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACEP,OAAA,CAAAE,SAAA;IAAAmB,QAAA,gBACErB,OAAA;MAAIsB,EAAE,EAAC,UAAU;MAAAD,QAAA,EAAC;IAAiB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxC1B,OAAA;MAAMsB,EAAE,EAAC,MAAM;MAAAD,QAAA,gBAIbrB,OAAA;QAAKsB,EAAE,EAAC,qBAAqB;QAAAD,QAAA,gBAE3BrB,OAAA,CAACH,UAAU;UAACyB,EAAE,EAAC,UAAU;UAACK,QAAQ,EAAC,KAAK;UAACC,KAAK,EAAC;QAAO;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACzD1B,OAAA,CAACH,UAAU;UAACyB,EAAE,EAAC,WAAW;UAACK,QAAQ,EAAC;QAAU;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACjD1B,OAAA,CAACH,UAAU;UAACyB,EAAE,EAAC,WAAW;UAACK,QAAQ,EAAC;QAAU;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACjD1B,OAAA,CAACH,UAAU;UAACyB,EAAE,EAAC,WAAW;UAACK,QAAQ,EAAC;QAAU;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC,eACN1B,OAAA;QAAKsB,EAAE,EAAC,oBAAoB;QAAAD,QAAA,gBAG1BrB,OAAA;UAAAqB,QAAA,gBACErB,OAAA;YAAAqB,QAAA,EAAI;UAAe;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACxB1B,OAAA;YAAKsB,EAAE,EAAC,qBAAqB;YAAAD,QAAA,gBAC3BrB,OAAA;cAAAqB,QAAA,EAAQ;YAAE;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACnB1B,OAAA;cAAAqB,QAAA,EAAQ;YAAE;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACnB1B,OAAA;cAAAqB,QAAA,EAAQ;YAAE;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACnB1B,OAAA;cAAAqB,QAAA,EAAQ;YAAE;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACnB1B,OAAA;cAAAqB,QAAA,EAAQ;YAAE;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACnB1B,OAAA;cAAAqB,QAAA,EAAQ;YAAE;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACnB1B,OAAA;cAAAqB,QAAA,EAAQ;YAAE;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACnB1B,OAAA;cAAAqB,QAAA,EAAQ;YAAE;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACN1B,OAAA;UAAKsB,EAAE,EAAC,yBAAyB;UAAAD,QAAA,gBAC/BrB,OAAA;YAAAqB,QAAA,EAAI;UAAU;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACnB1B,OAAA;YAAAqB,QAAA,EACGhB,gBAAgB,CAACwB,GAAG,CAAEC,GAAG,IAAK;cAC7B,aAAA9B,OAAA,CAACF,KAAK;gBAACiC,YAAY,EAAED,GAAG,CAACE,IAAK;gBAACC,UAAU,EAAEH,GAAG,CAACR;cAAG;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC;YACvD,CAAC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAEN1B,OAAA;QAAQsB,EAAE,EAAC,cAAc;QAAAD,QAAA,EAAC;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC;EAAA,eACP,CAAC;AAEP;AAACtB,EAAA,CAxGQD,IAAI;AAAA+B,EAAA,GAAJ/B,IAAI;AA0Gb,eAAeA,IAAI;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}