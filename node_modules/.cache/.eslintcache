[{"C:\\Github\\Repos\\trivia-game\\src\\index.js":"1","C:\\Github\\Repos\\trivia-game\\src\\App.jsx":"2","C:\\Github\\Repos\\trivia-game\\src\\Pages\\Host.jsx":"3","C:\\Github\\Repos\\trivia-game\\src\\Pages\\Home.jsx":"4","C:\\Github\\Repos\\trivia-game\\src\\Pages\\Join.jsx":"5","C:\\Github\\Repos\\trivia-game\\src\\Components\\Button.jsx":"6","C:\\Github\\Repos\\trivia-game\\src\\Components\\PlayerCard.jsx":"7","C:\\Github\\Repos\\trivia-game\\src\\Components\\Footer.jsx":"8","C:\\Github\\Repos\\trivia-game\\src\\Components\\CategoryOption.jsx":"9","C:\\Github\\Repos\\trivia-game\\src\\Components\\ColorSelector.jsx":"10"},{"size":567,"mtime":1694578533823,"results":"11","hashOfConfig":"12"},{"size":163,"mtime":1694065992492,"results":"13","hashOfConfig":"12"},{"size":5032,"mtime":1694570501166,"results":"14","hashOfConfig":"12"},{"size":950,"mtime":1694579706762,"results":"15","hashOfConfig":"12"},{"size":1013,"mtime":1694158841153,"results":"16","hashOfConfig":"12"},{"size":364,"mtime":1694065997117,"results":"17","hashOfConfig":"12"},{"size":264,"mtime":1693987877957,"results":"18","hashOfConfig":"12"},{"size":312,"mtime":1694158144436,"results":"19","hashOfConfig":"12"},{"size":654,"mtime":1694158608875,"results":"20","hashOfConfig":"12"},{"size":1029,"mtime":1694159073086,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"l6wtz7",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Github\\Repos\\trivia-game\\src\\index.js",[],[],"C:\\Github\\Repos\\trivia-game\\src\\App.jsx",[],[],[],"C:\\Github\\Repos\\trivia-game\\src\\Pages\\Host.jsx",["55","56"],[],"import React, { useState, useEffect } from \"react\";\r\nimport \"./Host.css\";\r\n\r\nimport PlayerCard from \"../Components/PlayerCard\";\r\nimport Footer from \"../Components/Footer.jsx\";\r\nimport CategoryOption from \"../Components/CategoryOption\";\r\n\r\n// import CategorySelect from \"../Components/CategorySelect.jsx\";\r\n\r\n//category Select\r\n//User- Select what categories you want your rivals to be quizzed on\r\n//DEV - Map the categories from the API to be rendered on the screen for user to see\r\n\r\n//Heading = Header Game Code\r\n//Players Joined\r\n//Settings\r\n//Start Game\r\n\r\nfunction Host() {\r\n  const [triviaCategories, setTriviaCategories] = useState([]);\r\n  const [userCategory, setUserCategory] = useState({\r\n    categoryName: \"\",\r\n    categoryId: null,\r\n  });\r\n  // const [displayUserCategory, setDisplayUserCategory] = useState();\r\n  const [gameParams, setGameParams] = useState({\r\n    param1: \"\",\r\n    param2: \"\",\r\n    param3: \"\",\r\n    param4: \"\",\r\n    param5: \"\",\r\n    param6: \"\",\r\n\r\n    param7: \"\",\r\n    param8: \"\",\r\n  });\r\n  // this state will be initialized with the return from a call to backend which will provide a randomly generated lobby code\r\n  const [gameCode, setGameCode] = useState(gameCodeVal());\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const response = await fetch(\r\n          \"https://trivia-quiz-questions-api.p.rapidapi.com/api_category.php\",\r\n          {\r\n            method: \"GET\",\r\n            headers: {\r\n              \"X-RapidAPI-Key\":\r\n                \"96f08c6256msh06a5acd536381b6p15e965jsne34a53ad1902\",\r\n              \"X-RapidAPI-Host\": \"trivia-quiz-questions-api.p.rapidapi.com\",\r\n            },\r\n          }\r\n        );\r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to fetch trivia data\");\r\n        }\r\n\r\n        const data = await response.json();\r\n        const dataArr = data.trivia_categories.slice().sort((a, b) => {\r\n          return a.name.localeCompare(b.name);\r\n        });\r\n\r\n        setTriviaCategories(dataArr);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  //NODE JS WORK\r\n  //assign passcode in server to individual session\r\n  //make an array of active session codes to check if generated code is being used\r\n  function gameCodeVal() {\r\n    const characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n    let passcode = \"\";\r\n    for (let i = 0; i < 6; i++) {\r\n      const randomIndex = Math.floor(Math.random() * characters.length);\r\n      passcode += characters.charAt(randomIndex);\r\n    }\r\n    return passcode;\r\n  }\r\n\r\n  // function getCatOptionBtns() {\r\n  //   const categoryOptionBtnArr =\r\n  //     document.querySelectorAll(\".categoryOptionBtn\");\r\n  //   console.log(categoryOptionBtnArr);\r\n  //   return categoryOptionBtnArr;\r\n  // }\r\n\r\n  function renderCategoryBtns() {\r\n    return triviaCategories.length > 0 ? (\r\n      triviaCategories.map((cat) => (\r\n        <CategoryOption\r\n          key={cat.id}\r\n          categoryName={cat.name}\r\n          categoryId={cat.id}\r\n          setUserCategory={setUserCategory}\r\n          userCategory={userCategory}\r\n        />\r\n      ))\r\n    ) : (\r\n      <p>Loading Categories...</p>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <main>\r\n      <div id=\"host\">\r\n        {/* H1 GAME CODE  generate a single use code*/}\r\n        {/* <button onClick={getTrivia}>GET TRIVIA</button> */}\r\n        <p id=\"codeGenBtn\" onClick={() => setGameCode(gameCodeVal())}>\r\n          Click here for New Code\r\n        </p>\r\n        <div id=\"playerCardContainer\">\r\n          <div id=\"createGameCode\">\r\n            <p>\r\n              Lobby Code: <span id=\"loadedCode\">{gameCode}</span>\r\n            </p>\r\n          </div>\r\n\r\n          {/* titles/colors will be grabbed from backend */}\r\n          <PlayerCard id=\"username\" username=\"Player 1\" color=\"coral\" />\r\n          <PlayerCard id=\"username2\" username=\"Player 2\" />\r\n          <PlayerCard id=\"username3\" username=\"Player 3\" />\r\n          <PlayerCard id=\"username4\" username=\"Player 4\" />\r\n        </div>\r\n\r\n        <div id=\"createGameSettings\">\r\n          {/* <button className=\"gamemodeBtn\">Classic</button> */}\r\n          {/* <button className=\"gamemodeBtn\">Fast Mode</button> */}\r\n          <div>\r\n            <h3>Game Parameters</h3>\r\n            <div id=\"gameParamsContainer\">\r\n              <button>P1</button>\r\n              <button>P2</button>\r\n              <button>P3</button>\r\n              <button>P4</button>\r\n              <button>P5</button>\r\n              <button>P6</button>\r\n              <button>P7</button>\r\n              <button>P8</button>\r\n            </div>\r\n          </div>\r\n          <div id=\"gameCategoriesContainer\">\r\n            <h3>Categories</h3>\r\n            <p>\r\n              {\" \"}\r\n              {userCategory.categoryName} {userCategory.categoryId}{\" \"}\r\n            </p>\r\n            <div>{renderCategoryBtns()}</div>\r\n          </div>\r\n        </div>\r\n\r\n        <button id=\"startGameBtn\">Start Game</button>\r\n      </div>\r\n      <Footer />\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Host;\r\n","C:\\Github\\Repos\\trivia-game\\src\\Pages\\Home.jsx",[],[],"C:\\Github\\Repos\\trivia-game\\src\\Pages\\Join.jsx",[],[],"C:\\Github\\Repos\\trivia-game\\src\\Components\\Button.jsx",[],[],"C:\\Github\\Repos\\trivia-game\\src\\Components\\PlayerCard.jsx",[],[],"C:\\Github\\Repos\\trivia-game\\src\\Components\\Footer.jsx",[],[],"C:\\Github\\Repos\\trivia-game\\src\\Components\\CategoryOption.jsx",["57"],[],"import React from \"react\";\r\nimport \"./Button.css\";\r\n//map category data from API into buttons to render onto screen\r\n//with category being passed into CategoryName.\r\n\r\nfunction CategoryOption({ categoryName, categoryId, setUserCategory }) {\r\n  function categoryBtnClicked() {}\r\n\r\n  return (\r\n    <button\r\n      className=\"categoryOptionBtn\"\r\n      onClick={() => {\r\n        setUserCategory((prevState) => ({\r\n          ...prevState,\r\n          categoryName: categoryName,\r\n          categoryId: categoryId,\r\n        }));\r\n      }}\r\n      value={categoryId}\r\n    >\r\n      <h3>{categoryName}</h3>\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default CategoryOption;\r\n","C:\\Github\\Repos\\trivia-game\\src\\Components\\ColorSelector.jsx",[],[],{"ruleId":"58","severity":1,"message":"59","line":26,"column":10,"nodeType":"60","messageId":"61","endLine":26,"endColumn":20},{"ruleId":"58","severity":1,"message":"62","line":26,"column":22,"nodeType":"60","messageId":"61","endLine":26,"endColumn":35},{"ruleId":"58","severity":1,"message":"63","line":7,"column":12,"nodeType":"60","messageId":"61","endLine":7,"endColumn":30},"no-unused-vars","'gameParams' is assigned a value but never used.","Identifier","unusedVar","'setGameParams' is assigned a value but never used.","'categoryBtnClicked' is defined but never used."]